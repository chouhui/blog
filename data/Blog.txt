[
  {
    "created_time": 1502053867,
    "title": "gua",
    "id": 2,
    "author": null,
    "updated_time": 1502053867,
    "content": "gua"
  },
  {
    "created_time": 1502054926,
    "title": "预习",
    "id": 3,
    "author": null,
    "updated_time": 1502054926,
    "content": "今天上课, 主要是\r\n----------------\r\n\r\n1. flask 中设置 cookie 和 session 的方法\r\n2. 修复注册登录和其他用户相关功能\r\n3. 用 pure css 美化页面\r\n4. 用 博客 来讲解如何拆分任务\r\n\r\n\r\n分解博客\r\n--------\r\n\r\n1. 准备 model\r\n    - 博客 model， Blog\r\n        - id\r\n        - title\r\n        - content\r\n        - author\r\n        - created_time\r\n        - updated_time\r\n    - 博客 model，Comment\r\n        - id\r\n        - username\r\n        - content\r\n        - created_time\r\n        - updated_time\r\n        - blog_id\r\n2. 写出操作场景的文档 （你要对这些数据做什么操作，这是最重要的一步）\r\n    - 有一个主页，可看到所有博客的标题和时间\r\n        - 主页有链接转到发表博客的页面\r\n        - 主页可以点博客标题进入博客详细页面\r\n    - 发表博客页面有一个表单可以发表博客\r\n    - 博客的详细页面，可以看到如下数据\r\n        - 标题，作者，内容，时间\r\n        - 所有评论的列表\r\n        - 有一个输入框，可以输入评论\r\n        - 输入之后，页面可以看到最新的评论\r\n3. 根据文档，写好 CRUD 操作和其他操作\r\n    - `Blog.all()`\r\n    - `Blog.new()`\r\n    - `Blog.find()`\r\n    - `Comnet.all()`\r\n    - `Comnet.find_by(blog_id)`\r\n    - `Comnet.new()`\r\n4. 写路由函数\r\n5. 画 HTML 页面\r\n6. 用 JS 实现相关页面的逻辑\r\n7. 美化页面"
  }
]